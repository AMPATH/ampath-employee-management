{"ast":null,"code":"var _iconTypes;\n\nvar _excluded = [\"children\", \"className\", \"onClick\"],\n    _excluded2 = [\"ariaLabel\", \"className\", \"iconDescription\", \"type\", \"renderIcon\", \"name\", \"notificationType\"],\n    _excluded3 = [\"role\", \"onClose\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"children\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"timeout\", \"closeOnEscape\"],\n    _excluded4 = [\"actions\", \"children\", \"role\", \"onClose\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"hasFocus\", \"closeOnEscape\"];\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nimport { Close20, ErrorFilled20, CheckmarkFilled20, WarningFilled20, WarningAltFilled20, InformationFilled20, InformationSquareFilled20 } from '@carbon/icons-react';\nimport Button from '../../Button';\nimport useIsomorphicEffect from '../../../internal/useIsomorphicEffect';\nimport { useNoInteractiveChildren } from '../../../internal/useNoInteractiveChildren';\nimport { keys, matches } from '../../../internal/keyboard';\nvar prefix = settings.prefix;\n/**\n * Conditionally call a callback when the escape key is pressed\n * @param {func} callback - function to be called\n * @param {bool} override - escape hatch to conditionally call the callback\n */\n\nfunction useEscapeToClose(callback) {\n  var override = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (matches(event, [keys.Escape]) && override) {\n      callback(event);\n    }\n  };\n\n  useIsomorphicEffect(function () {\n    document.addEventListener('keydown', handleKeyDown, false);\n    return function () {\n      return document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  });\n}\n\nexport function NotificationActionButton(_ref) {\n  var children = _ref.children,\n      customClassName = _ref.className,\n      onClick = _ref.onClick,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var className = cx(customClassName, \"\".concat(prefix, \"--inline-notification__action-button\"));\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    className: className,\n    kind: \"ghost\",\n    onClick: onClick,\n    size: \"small\"\n  }, rest), children);\n}\nNotificationActionButton.propTypes = {\n  /**\n   * Specify the content of the notification action button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification action button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally specify a click handler for the notification action button.\n   */\n  onClick: PropTypes.func\n};\nexport function NotificationButton(_ref2) {\n  var ariaLabel = _ref2.ariaLabel,\n      className = _ref2.className,\n      iconDescription = _ref2.iconDescription,\n      type = _ref2.type,\n      IconTag = _ref2.renderIcon,\n      name = _ref2.name,\n      notificationType = _ref2.notificationType,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var buttonClassName = cx(className, _defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-button\"), notificationType));\n  var iconClassName = cx(_defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-icon\"), notificationType));\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, rest, {\n    // eslint-disable-next-line react/button-has-type\n    type: type,\n    \"aria-label\": iconDescription,\n    title: iconDescription,\n    className: buttonClassName\n  }), IconTag && /*#__PURE__*/React.createElement(IconTag, {\n    \"aria-label\": ariaLabel,\n    className: iconClassName,\n    name: name\n  }));\n}\nNotificationButton.propTypes = {\n  /**\n   * Specify a label to be read by screen readers on the notification button\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Specify an optional className to be applied to the notification button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify an optional icon for the Button through a string,\n   * if something but regular \"close\" icon is desirable\n   */\n  name: PropTypes.string,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline']),\n\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: PropTypes.string\n};\nNotificationButton.defaultProps = {\n  ariaLabel: 'close notification',\n  // TODO: deprecate this prop\n  notificationType: 'toast',\n  type: 'button',\n  iconDescription: 'close icon',\n  renderIcon: Close20\n};\nvar iconTypes = (_iconTypes = {\n  error: ErrorFilled20,\n  success: CheckmarkFilled20,\n  warning: WarningFilled20\n}, _defineProperty(_iconTypes, 'warning-alt', WarningAltFilled20), _defineProperty(_iconTypes, \"info\", InformationFilled20), _defineProperty(_iconTypes, 'info-square', InformationSquareFilled20), _iconTypes);\n\nfunction NotificationIcon(_ref3) {\n  var iconDescription = _ref3.iconDescription,\n      kind = _ref3.kind,\n      notificationType = _ref3.notificationType;\n  var IconForKind = iconTypes[kind];\n\n  if (!IconForKind) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(IconForKind, {\n    className: \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__icon\")\n  }, /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n}\n\nNotificationIcon.propTypes = {\n  iconDescription: PropTypes.string.isRequired,\n  kind: PropTypes.oneOf(['error', 'success', 'warning', 'warning-alt', 'info', 'info-square']).isRequired,\n  notificationType: PropTypes.oneOf(['inline', 'toast']).isRequired\n};\nexport function ToastNotification(_ref4) {\n  var _cx3;\n\n  var role = _ref4.role,\n      onClose = _ref4.onClose,\n      onCloseButtonClick = _ref4.onCloseButtonClick,\n      iconDescription = _ref4.iconDescription,\n      statusIconDescription = _ref4.statusIconDescription,\n      className = _ref4.className,\n      children = _ref4.children,\n      kind = _ref4.kind,\n      lowContrast = _ref4.lowContrast,\n      hideCloseButton = _ref4.hideCloseButton,\n      timeout = _ref4.timeout,\n      closeOnEscape = _ref4.closeOnEscape,\n      rest = _objectWithoutProperties(_ref4, _excluded3);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var containerClassName = cx(className, (_cx3 = {}, _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification\"), true), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--low-contrast\"), lowContrast), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--\").concat(kind), kind), _cx3));\n  var ref = useRef(null);\n  useNoInteractiveChildren(ref);\n\n  var handleClose = function handleClose(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  };\n\n  useEscapeToClose(handleCloseButtonClick, closeOnEscape);\n\n  function handleCloseButtonClick(event) {\n    onCloseButtonClick(event);\n    handleClose(event);\n  }\n\n  var savedOnClose = useRef(onClose);\n  useEffect(function () {\n    savedOnClose.current = onClose;\n  });\n  useEffect(function () {\n    if (!timeout) {\n      return;\n    }\n\n    var timeoutId = window.setTimeout(function (event) {\n      setIsOpen(false);\n\n      if (savedOnClose.current) {\n        savedOnClose.current(event);\n      }\n    }, timeout);\n    return function () {\n      window.clearTimeout(timeoutId);\n    };\n  }, [timeout]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    role: role,\n    className: containerClassName\n  }), /*#__PURE__*/React.createElement(NotificationIcon, {\n    notificationType: \"toast\",\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: \"\".concat(prefix, \"--toast-notification__content\")\n  }, children), !hideCloseButton && /*#__PURE__*/React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: \"toast\",\n    onClick: handleCloseButtonClick,\n    \"aria-hidden\": \"true\"\n  }));\n}\nToastNotification.propTypes = {\n  /**\n   * Specify the content\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify if pressing the escape key should close notifications\n   */\n  closeOnEscape: PropTypes.bool,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the ToastNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Provide a function that is called when the close button is clicked\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.oneOf(['alert', 'log', 'status']).isRequired,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * Specify an optional duration the notification should be closed in\n   */\n  timeout: PropTypes.number\n};\nToastNotification.defaultProps = {\n  kind: 'error',\n  children: 'provide content',\n  role: 'status',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  timeout: 0,\n  closeOnEscape: true\n};\nexport function InlineNotification(_ref5) {\n  var _cx4;\n\n  var actions = _ref5.actions,\n      children = _ref5.children,\n      initialRole = _ref5.role,\n      onClose = _ref5.onClose,\n      onCloseButtonClick = _ref5.onCloseButtonClick,\n      iconDescription = _ref5.iconDescription,\n      statusIconDescription = _ref5.statusIconDescription,\n      className = _ref5.className,\n      kind = _ref5.kind,\n      lowContrast = _ref5.lowContrast,\n      hideCloseButton = _ref5.hideCloseButton,\n      hasFocus = _ref5.hasFocus,\n      closeOnEscape = _ref5.closeOnEscape,\n      rest = _objectWithoutProperties(_ref5, _excluded4);\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1];\n\n  var containerClassName = cx(className, (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification\"), true), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--low-contrast\"), lowContrast), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--\").concat(kind), kind), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--hide-close-button\"), hideCloseButton), _cx4)); // Placing interactable element(s) within a notification requires a role of\n  // alertdialog. Additionally, focus must be automatically moved to the component.\n\n  var role = actions ? 'alertdialog' : initialRole;\n  var ref = useRef(null);\n  useIsomorphicEffect(function () {\n    if (ref.current && role == 'alertdialog' && hasFocus) {\n      ref.current.focus();\n    }\n  });\n\n  var handleClose = function handleClose(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  };\n\n  useEscapeToClose(handleCloseButtonClick, closeOnEscape);\n\n  function handleCloseButtonClick(event) {\n    onCloseButtonClick(event);\n    handleClose(event);\n  }\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    ref: ref,\n    role: role,\n    className: containerClassName\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__details\")\n  }, /*#__PURE__*/React.createElement(NotificationIcon, {\n    notificationType: \"inline\",\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__text-wrapper\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__content\")\n  }, children))), actions, !hideCloseButton && /*#__PURE__*/React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: \"inline\",\n    onClick: handleCloseButtonClick,\n    \"aria-hidden\": role === 'alertdialog' ? false : true\n  }));\n}\nInlineNotification.propTypes = {\n  /**\n   * Pass in the action nodes that will be rendered within the InlineNotification.\n   * If this prop is configured, the aria role will be changed to \"alertdialog\"\n   */\n  actions: PropTypes.node,\n\n  /**\n   * Specify the content\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify if pressing the escape key should close notifications\n   */\n  closeOnEscape: PropTypes.bool,\n\n  /**\n   * Specify if focus should be moved to the component when the notification contains actions\n   */\n  hasFocus: PropTypes.bool,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the InlineNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Provide a function that is called when the close button is clicked\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side. If the `actions` prop is\n   * configured, this will be overridden to \"alertdialog\".\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string\n};\nInlineNotification.defaultProps = {\n  kind: 'error',\n  content: 'provide content',\n  role: 'status',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  hasFocus: true,\n  closeOnEscape: true\n};","map":{"version":3,"sources":["/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/node_modules/carbon-components-react/es/components/Notification/next/Notification.js"],"names":["_iconTypes","_excluded","_excluded2","_excluded3","_excluded4","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_extends","assign","target","arguments","source","hasOwnProperty","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","PropTypes","React","useEffect","useRef","useState","cx","settings","Close20","ErrorFilled20","CheckmarkFilled20","WarningFilled20","WarningAltFilled20","InformationFilled20","InformationSquareFilled20","Button","useIsomorphicEffect","useNoInteractiveChildren","matches","prefix","useEscapeToClose","callback","override","undefined","handleKeyDown","event","Escape","document","addEventListener","removeEventListener","NotificationActionButton","_ref","children","customClassName","className","onClick","rest","concat","createElement","kind","size","propTypes","node","string","func","NotificationButton","_ref2","ariaLabel","iconDescription","type","IconTag","renderIcon","notificationType","buttonClassName","iconClassName","title","oneOf","oneOfType","object","defaultProps","iconTypes","error","success","warning","NotificationIcon","_ref3","IconForKind","isRequired","ToastNotification","_ref4","_cx3","role","onClose","onCloseButtonClick","statusIconDescription","lowContrast","hideCloseButton","timeout","closeOnEscape","_useState","_useState2","isOpen","setIsOpen","containerClassName","ref","handleClose","evt","handleCloseButtonClick","savedOnClose","current","timeoutId","window","setTimeout","clearTimeout","bool","number","InlineNotification","_ref5","_cx4","actions","initialRole","hasFocus","_useState3","_useState4","focus","content"],"mappings":"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","sourcesContent":["var _iconTypes;\n\nvar _excluded = [\"children\", \"className\", \"onClick\"],\n    _excluded2 = [\"ariaLabel\", \"className\", \"iconDescription\", \"type\", \"renderIcon\", \"name\", \"notificationType\"],\n    _excluded3 = [\"role\", \"onClose\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"children\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"timeout\", \"closeOnEscape\"],\n    _excluded4 = [\"actions\", \"children\", \"role\", \"onClose\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"hasFocus\", \"closeOnEscape\"];\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nimport { Close20, ErrorFilled20, CheckmarkFilled20, WarningFilled20, WarningAltFilled20, InformationFilled20, InformationSquareFilled20 } from '@carbon/icons-react';\nimport Button from '../../Button';\nimport useIsomorphicEffect from '../../../internal/useIsomorphicEffect';\nimport { useNoInteractiveChildren } from '../../../internal/useNoInteractiveChildren';\nimport { keys, matches } from '../../../internal/keyboard';\nvar prefix = settings.prefix;\n/**\n * Conditionally call a callback when the escape key is pressed\n * @param {func} callback - function to be called\n * @param {bool} override - escape hatch to conditionally call the callback\n */\n\nfunction useEscapeToClose(callback) {\n  var override = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (matches(event, [keys.Escape]) && override) {\n      callback(event);\n    }\n  };\n\n  useIsomorphicEffect(function () {\n    document.addEventListener('keydown', handleKeyDown, false);\n    return function () {\n      return document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  });\n}\n\nexport function NotificationActionButton(_ref) {\n  var children = _ref.children,\n      customClassName = _ref.className,\n      onClick = _ref.onClick,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var className = cx(customClassName, \"\".concat(prefix, \"--inline-notification__action-button\"));\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    className: className,\n    kind: \"ghost\",\n    onClick: onClick,\n    size: \"small\"\n  }, rest), children);\n}\nNotificationActionButton.propTypes = {\n  /**\n   * Specify the content of the notification action button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification action button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally specify a click handler for the notification action button.\n   */\n  onClick: PropTypes.func\n};\nexport function NotificationButton(_ref2) {\n  var ariaLabel = _ref2.ariaLabel,\n      className = _ref2.className,\n      iconDescription = _ref2.iconDescription,\n      type = _ref2.type,\n      IconTag = _ref2.renderIcon,\n      name = _ref2.name,\n      notificationType = _ref2.notificationType,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var buttonClassName = cx(className, _defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-button\"), notificationType));\n  var iconClassName = cx(_defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-icon\"), notificationType));\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, rest, {\n    // eslint-disable-next-line react/button-has-type\n    type: type,\n    \"aria-label\": iconDescription,\n    title: iconDescription,\n    className: buttonClassName\n  }), IconTag && /*#__PURE__*/React.createElement(IconTag, {\n    \"aria-label\": ariaLabel,\n    className: iconClassName,\n    name: name\n  }));\n}\nNotificationButton.propTypes = {\n  /**\n   * Specify a label to be read by screen readers on the notification button\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Specify an optional className to be applied to the notification button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify an optional icon for the Button through a string,\n   * if something but regular \"close\" icon is desirable\n   */\n  name: PropTypes.string,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline']),\n\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: PropTypes.string\n};\nNotificationButton.defaultProps = {\n  ariaLabel: 'close notification',\n  // TODO: deprecate this prop\n  notificationType: 'toast',\n  type: 'button',\n  iconDescription: 'close icon',\n  renderIcon: Close20\n};\nvar iconTypes = (_iconTypes = {\n  error: ErrorFilled20,\n  success: CheckmarkFilled20,\n  warning: WarningFilled20\n}, _defineProperty(_iconTypes, 'warning-alt', WarningAltFilled20), _defineProperty(_iconTypes, \"info\", InformationFilled20), _defineProperty(_iconTypes, 'info-square', InformationSquareFilled20), _iconTypes);\n\nfunction NotificationIcon(_ref3) {\n  var iconDescription = _ref3.iconDescription,\n      kind = _ref3.kind,\n      notificationType = _ref3.notificationType;\n  var IconForKind = iconTypes[kind];\n\n  if (!IconForKind) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(IconForKind, {\n    className: \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__icon\")\n  }, /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n}\n\nNotificationIcon.propTypes = {\n  iconDescription: PropTypes.string.isRequired,\n  kind: PropTypes.oneOf(['error', 'success', 'warning', 'warning-alt', 'info', 'info-square']).isRequired,\n  notificationType: PropTypes.oneOf(['inline', 'toast']).isRequired\n};\nexport function ToastNotification(_ref4) {\n  var _cx3;\n\n  var role = _ref4.role,\n      onClose = _ref4.onClose,\n      onCloseButtonClick = _ref4.onCloseButtonClick,\n      iconDescription = _ref4.iconDescription,\n      statusIconDescription = _ref4.statusIconDescription,\n      className = _ref4.className,\n      children = _ref4.children,\n      kind = _ref4.kind,\n      lowContrast = _ref4.lowContrast,\n      hideCloseButton = _ref4.hideCloseButton,\n      timeout = _ref4.timeout,\n      closeOnEscape = _ref4.closeOnEscape,\n      rest = _objectWithoutProperties(_ref4, _excluded3);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var containerClassName = cx(className, (_cx3 = {}, _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification\"), true), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--low-contrast\"), lowContrast), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--\").concat(kind), kind), _cx3));\n  var ref = useRef(null);\n  useNoInteractiveChildren(ref);\n\n  var handleClose = function handleClose(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  };\n\n  useEscapeToClose(handleCloseButtonClick, closeOnEscape);\n\n  function handleCloseButtonClick(event) {\n    onCloseButtonClick(event);\n    handleClose(event);\n  }\n\n  var savedOnClose = useRef(onClose);\n  useEffect(function () {\n    savedOnClose.current = onClose;\n  });\n  useEffect(function () {\n    if (!timeout) {\n      return;\n    }\n\n    var timeoutId = window.setTimeout(function (event) {\n      setIsOpen(false);\n\n      if (savedOnClose.current) {\n        savedOnClose.current(event);\n      }\n    }, timeout);\n    return function () {\n      window.clearTimeout(timeoutId);\n    };\n  }, [timeout]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    role: role,\n    className: containerClassName\n  }), /*#__PURE__*/React.createElement(NotificationIcon, {\n    notificationType: \"toast\",\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: \"\".concat(prefix, \"--toast-notification__content\")\n  }, children), !hideCloseButton && /*#__PURE__*/React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: \"toast\",\n    onClick: handleCloseButtonClick,\n    \"aria-hidden\": \"true\"\n  }));\n}\nToastNotification.propTypes = {\n  /**\n   * Specify the content\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify if pressing the escape key should close notifications\n   */\n  closeOnEscape: PropTypes.bool,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the ToastNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Provide a function that is called when the close button is clicked\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.oneOf(['alert', 'log', 'status']).isRequired,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * Specify an optional duration the notification should be closed in\n   */\n  timeout: PropTypes.number\n};\nToastNotification.defaultProps = {\n  kind: 'error',\n  children: 'provide content',\n  role: 'status',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  timeout: 0,\n  closeOnEscape: true\n};\nexport function InlineNotification(_ref5) {\n  var _cx4;\n\n  var actions = _ref5.actions,\n      children = _ref5.children,\n      initialRole = _ref5.role,\n      onClose = _ref5.onClose,\n      onCloseButtonClick = _ref5.onCloseButtonClick,\n      iconDescription = _ref5.iconDescription,\n      statusIconDescription = _ref5.statusIconDescription,\n      className = _ref5.className,\n      kind = _ref5.kind,\n      lowContrast = _ref5.lowContrast,\n      hideCloseButton = _ref5.hideCloseButton,\n      hasFocus = _ref5.hasFocus,\n      closeOnEscape = _ref5.closeOnEscape,\n      rest = _objectWithoutProperties(_ref5, _excluded4);\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1];\n\n  var containerClassName = cx(className, (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification\"), true), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--low-contrast\"), lowContrast), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--\").concat(kind), kind), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--hide-close-button\"), hideCloseButton), _cx4)); // Placing interactable element(s) within a notification requires a role of\n  // alertdialog. Additionally, focus must be automatically moved to the component.\n\n  var role = actions ? 'alertdialog' : initialRole;\n  var ref = useRef(null);\n  useIsomorphicEffect(function () {\n    if (ref.current && role == 'alertdialog' && hasFocus) {\n      ref.current.focus();\n    }\n  });\n\n  var handleClose = function handleClose(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  };\n\n  useEscapeToClose(handleCloseButtonClick, closeOnEscape);\n\n  function handleCloseButtonClick(event) {\n    onCloseButtonClick(event);\n    handleClose(event);\n  }\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    ref: ref,\n    role: role,\n    className: containerClassName\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__details\")\n  }, /*#__PURE__*/React.createElement(NotificationIcon, {\n    notificationType: \"inline\",\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__text-wrapper\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__content\")\n  }, children))), actions, !hideCloseButton && /*#__PURE__*/React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: \"inline\",\n    onClick: handleCloseButtonClick,\n    \"aria-hidden\": role === 'alertdialog' ? false : true\n  }));\n}\nInlineNotification.propTypes = {\n  /**\n   * Pass in the action nodes that will be rendered within the InlineNotification.\n   * If this prop is configured, the aria role will be changed to \"alertdialog\"\n   */\n  actions: PropTypes.node,\n\n  /**\n   * Specify the content\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify if pressing the escape key should close notifications\n   */\n  closeOnEscape: PropTypes.bool,\n\n  /**\n   * Specify if focus should be moved to the component when the notification contains actions\n   */\n  hasFocus: PropTypes.bool,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the InlineNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Provide a function that is called when the close button is clicked\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side. If the `actions` prop is\n   * configured, this will be overridden to \"alertdialog\".\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string\n};\nInlineNotification.defaultProps = {\n  kind: 'error',\n  content: 'provide content',\n  role: 'status',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  hasFocus: true,\n  closeOnEscape: true\n};"]},"metadata":{},"sourceType":"module"}