{"ast":null,"code":"const url = process.env.REACT_APP_URL;\nexport const getAllEmployees = async () => {\n  console.log('Log', url);\n  return await fetch(`http://127.0.0.1:2000/employee`).then(response => {\n    return response.json();\n  }).then(res => {\n    // console.log(res.data);\n    return res.data;\n  }).catch(error => {\n    return error;\n  });\n};\nexport const uploadTimesheet = async formData => {\n  return await fetch(url + `/timesheet`, {\n    method: 'POST',\n    body: formData\n  }).then(res => {\n    return res.json();\n  }).then(res => {\n    return res;\n  }).catch(error => console.log(error));\n};","map":{"version":3,"sources":["/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Timesheets/timesheet.resource.tsx"],"names":["url","process","env","REACT_APP_URL","getAllEmployees","console","log","fetch","then","response","json","res","data","catch","error","uploadTimesheet","formData","method","body"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AACA,OAAO,MAAMC,eAAe,GAAG,YAAY;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBN,GAAnB;AACA,SAAO,MAAMO,KAAK,CAAE,gCAAF,CAAL,CACVC,IADU,CACJC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHU,EAIVF,IAJU,CAIJG,GAAD,IAAc;AAClB;AACA,WAAOA,GAAG,CAACC,IAAX;AACD,GAPU,EAQVC,KARU,CAQHC,KAAD,IAAgB;AACrB,WAAOA,KAAP;AACD,GAVU,CAAb;AAWD,CAbM;AAcP,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAP,IAAyB;AACtD,SAAO,MAAMT,KAAK,CAACP,GAAG,GAAI,YAAR,EAAqB;AACrCiB,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,IAAI,EAAEF;AAF+B,GAArB,CAAL,CAIVR,IAJU,CAIJG,GAAD,IAAS;AACb,WAAOA,GAAG,CAACD,IAAJ,EAAP;AACD,GANU,EAOVF,IAPU,CAOJG,GAAD,IAAS;AACb,WAAOA,GAAP;AACD,GATU,EAUVE,KAVU,CAUHC,KAAD,IAAWT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAVP,CAAb;AAWD,CAZM","sourcesContent":["const url = process.env.REACT_APP_URL;\nexport const getAllEmployees = async () => {\n  console.log('Log', url);\n  return await fetch(`http://127.0.0.1:2000/employee`)\n    .then((response) => {\n      return response.json();\n    })\n    .then((res: any) => {\n      // console.log(res.data);\n      return res.data;\n    })\n    .catch((error: any) => {\n      return error;\n    });\n};\nexport const uploadTimesheet = async (formData: any) => {\n  return await fetch(url + `/timesheet`, {\n    method: 'POST',\n    body: formData,\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch((error) => console.log(error));\n};\n"]},"metadata":{},"sourceType":"module"}