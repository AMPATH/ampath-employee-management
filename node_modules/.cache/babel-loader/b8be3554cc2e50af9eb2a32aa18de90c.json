{"ast":null,"code":"var _jsxFileName = \"/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Employee/Tracking/employee-tracking.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport { Formik, Form } from 'formik';\nimport dayjs from 'dayjs';\nimport { Button, TextInput, DatePicker, DatePickerInput, Select, SelectItem, Column, ToastNotification } from 'carbon-components-react';\nimport { FormValues } from './employee-tracking-types';\nimport { validationSchema } from './employee-tracking-validation';\nimport { getDepartments, getProjects, getSites, getCounties, getPrograms, getBudgets, saveEmployeeTrackingInformation } from './employee-tracking-resource';\nimport styles from './employee-tracking.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EmployeeTrackingForm = props => {\n  _s();\n\n  const [project, setProject] = useState();\n  const [department, setDepartment] = useState();\n  const [site, setSite] = useState();\n  const [county, setCounty] = useState();\n  const [budget, setBudget] = useState();\n  const [program, setProgram] = useState();\n  const [formSuccess, setFormSuccess] = useState(false);\n  const [formError, setFormError] = useState(false);\n  const edit = props.edit;\n  useMemo(() => {\n    if (edit) {\n      FormValues.county = edit === null || edit === void 0 ? void 0 : edit.county;\n      FormValues.countyBudget = edit === null || edit === void 0 ? void 0 : edit.countyBudget;\n    }\n  }, []);\n\n  const handleFormSubmit = (values, helpers) => {\n    values.pfNumber = `${props.pfNumber}`;\n    saveEmployeeTrackingInformation(values).then(response => {\n      if (response.status === 200) {\n        var _props$parentCallback;\n\n        setFormSuccess(true);\n        (_props$parentCallback = props.parentCallback) === null || _props$parentCallback === void 0 ? void 0 : _props$parentCallback.call(props, {\n          formSuccess: true\n        });\n      }\n    }).catch(error => {\n      var _props$parentCallback2;\n\n      setFormError(true);\n      (_props$parentCallback2 = props.parentCallback) === null || _props$parentCallback2 === void 0 ? void 0 : _props$parentCallback2.call(props, {\n        formSuccess: false\n      });\n    });\n  };\n\n  useMemo(() => {\n    getProjects().then(response => {\n      let results = response.map(resp => {\n        return resp;\n      });\n      setProject(results);\n    });\n    getDepartments().then(response => {\n      let results = response.map(resp => {\n        return resp;\n      });\n      setDepartment(results);\n    });\n    getSites().then(response => {\n      let results = response.map(resp => {\n        return resp;\n      });\n      setSite(results);\n    });\n    getCounties().then(response => {\n      let results = response.map(resp => {\n        return resp;\n      });\n      setCounty(results);\n    });\n    getBudgets().then(response => {\n      let results = response.map(resp => {\n        return resp;\n      });\n      setBudget(results);\n    });\n    getPrograms().then(response => {\n      let results = response.map(resp => {\n        return resp;\n      });\n      setProgram(results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [formSuccess && /*#__PURE__*/_jsxDEV(ToastNotification, {\n      title: \"Data saved successfully\",\n      className: styles.toast,\n      timeout: 3000,\n      subtitle: \"Employee tracking data saved successfully\",\n      kind: \"success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), formError && /*#__PURE__*/_jsxDEV(ToastNotification, {\n      title: \"Error saving data\",\n      className: styles.toast,\n      timeout: 3000,\n      subtitle: \"Employee tracking data not saved\",\n      kind: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: FormValues,\n      validationSchema: validationSchema,\n      onSubmit: handleFormSubmit,\n      children: ({\n        values,\n        handleChange,\n        handleBlur,\n        setFieldValue,\n        touched,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            id: \"project\",\n            name: \"project\",\n            labelText: \"Project\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            invalid: !!(touched.project && errors.project),\n            invalidText: errors.project,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              text: \"--Choose project--\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), project === null || project === void 0 ? void 0 : project.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.projectId\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            id: \"department\",\n            name: \"department\",\n            labelText: \"Department\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            invalid: !!(touched.department && errors.department),\n            invalidText: errors.department,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              text: \"--Choose department--\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), department === null || department === void 0 ? void 0 : department.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.departmentId\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            id: \"site\",\n            name: \"site\",\n            labelText: \"Site\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            invalid: !!(touched.site && errors.site),\n            invalidText: errors.site,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              text: \"--Choose site--\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), site === null || site === void 0 ? void 0 : site.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.siteId\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            id: \"county\",\n            name: \"county\",\n            labelText: \"County\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            invalid: !!(touched.county && errors.county),\n            invalidText: errors.county,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              text: \"--Choose county--\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), county === null || county === void 0 ? void 0 : county.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.countyId\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            id: \"countyBudget\",\n            name: \"countyBudget\",\n            labelText: \"County budget\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            invalid: !!(touched.countyBudget && errors.countyBudget),\n            invalidText: errors.countyBudget,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              text: \"--Choose county budget--\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), budget === null || budget === void 0 ? void 0 : budget.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.budgetId\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            id: \"programArea\",\n            name: \"programArea\",\n            labelText: \"Program area\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            invalid: !!(touched.programArea && errors.programArea),\n            invalidText: errors.programArea,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              text: \"--Choose program area--\",\n              value: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), program === null || program === void 0 ? void 0 : program.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.programId\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            datePickerType: \"single\",\n            onChange: ([event]) => setFieldValue('endOfContract', dayjs(event).format('YYYY-MM-DD')),\n            children: /*#__PURE__*/_jsxDEV(DatePickerInput, {\n              id: \"endOfContract\",\n              name: \"endOfContract\",\n              labelText: \"End of contract\",\n              placeholder: \"mm/dd/yyyy\",\n              invalid: !!(touched.endOfContract && errors.endOfContract),\n              invalidText: errors.endOfContract\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            datePickerType: \"single\",\n            onChange: ([event]) => setFieldValue('dateOfJoining', dayjs(event).format('YYYY-MM-DD')),\n            children: /*#__PURE__*/_jsxDEV(DatePickerInput, {\n              id: \"dateOfJoining\",\n              name: \"dateOfJoining\",\n              labelText: \"Date of joining\",\n              placeholder: \"mm/dd/yyyy\",\n              invalid: !!(touched.dateOfJoining && errors.dateOfJoining),\n              invalidText: errors.dateOfJoining\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            datePickerType: \"single\",\n            onChange: ([event]) => setFieldValue('dateOfLeaving', dayjs(event).format('YYYY-MM-DD')),\n            children: /*#__PURE__*/_jsxDEV(DatePickerInput, {\n              id: \"dateOfLeaving\",\n              name: \"dateOfLeaving\",\n              labelText: \"Date of leaving\",\n              placeholder: \"mm/dd/yyyy\",\n              invalid: !!(touched.dateOfLeaving && errors.dateOfLeaving),\n              invalidText: errors.dateOfLeaving\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            id: \"jobSpecification\",\n            name: \"jobSpecification\",\n            labelText: \"Job specification\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            invalid: !!(touched.jobSpecification && errors.jobSpecification),\n            invalidText: errors.jobSpecification,\n            value: values.jobSpecification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: styles.submitBtn,\n            kind: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EmployeeTrackingForm, \"td/lWkZUKqCU7nxfdC2feQ8jU4g=\");\n\n_c = EmployeeTrackingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeTrackingForm\");","map":{"version":3,"sources":["/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Employee/Tracking/employee-tracking.component.tsx"],"names":["React","useState","useMemo","Formik","Form","dayjs","Button","TextInput","DatePicker","DatePickerInput","Select","SelectItem","Column","ToastNotification","FormValues","validationSchema","getDepartments","getProjects","getSites","getCounties","getPrograms","getBudgets","saveEmployeeTrackingInformation","styles","EmployeeTrackingForm","props","project","setProject","department","setDepartment","site","setSite","county","setCounty","budget","setBudget","program","setProgram","formSuccess","setFormSuccess","formError","setFormError","edit","countyBudget","handleFormSubmit","values","helpers","pfNumber","then","response","status","parentCallback","catch","error","results","map","resp","toast","handleChange","handleBlur","setFieldValue","touched","errors","form","item","index","name","projectId","departmentId","siteId","countyId","budgetId","programArea","programId","event","format","endOfContract","dateOfJoining","dateOfLeaving","jobSpecification","submitBtn"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport dayjs from 'dayjs';\nimport {\n  Button,\n  TextInput,\n  DatePicker,\n  DatePickerInput,\n  Select,\n  SelectItem,\n  Column,\n  Row,\n  Grid,\n  ToastNotification,\n} from 'carbon-components-react';\nimport { FormValues, EmployeeTrackingInputProps } from './employee-tracking-types';\nimport { validationSchema } from './employee-tracking-validation';\nimport {\n  getDepartments,\n  getProjects,\n  getSites,\n  getCounties,\n  getPrograms,\n  getBudgets,\n  saveEmployeeTrackingInformation,\n} from './employee-tracking-resource';\nimport styles from './employee-tracking.module.scss';\n\nexport type Action = 'Add' | 'Edit';\n\nexport interface EmployeeTrackingFormProps {\n  pfNumber: number | undefined;\n  action: Action;\n  parentCallback?(evnt): void;\n  edit?: EmployeeTrackingInputProps;\n}\n\nexport const EmployeeTrackingForm: React.FC<EmployeeTrackingFormProps> = (props) => {\n  const [project, setProject] = useState<Array<any>>();\n  const [department, setDepartment] = useState<Array<any>>();\n  const [site, setSite] = useState<Array<any>>();\n  const [county, setCounty] = useState<Array<any>>();\n  const [budget, setBudget] = useState<Array<any>>();\n  const [program, setProgram] = useState<Array<any>>();\n  const [formSuccess, setFormSuccess] = useState<boolean>(false);\n  const [formError, setFormError] = useState<boolean>(false);\n  const edit = props.edit;\n\n  useMemo(() => {\n    if (edit) {\n      FormValues.county = edit?.county;\n      FormValues.countyBudget = edit?.countyBudget;\n    }\n  }, []);\n\n  const handleFormSubmit = (values: EmployeeTrackingInputProps, helpers: FormikHelpers<EmployeeTrackingInputProps>) => {\n    values.pfNumber = `${props.pfNumber}`;\n    saveEmployeeTrackingInformation(values)\n      .then((response) => {\n        if (response.status === 200) {\n          setFormSuccess(true);\n          props.parentCallback?.({ formSuccess: true });\n        }\n      })\n      .catch((error) => {\n        setFormError(true);\n        props.parentCallback?.({ formSuccess: false });\n      });\n  };\n\n  useMemo(() => {\n    getProjects().then((response) => {\n      let results = response.map((resp) => {\n        return resp;\n      });\n      setProject(results);\n    });\n    getDepartments().then((response) => {\n      let results = response.map((resp) => {\n        return resp;\n      });\n      setDepartment(results);\n    });\n    getSites().then((response) => {\n      let results = response.map((resp) => {\n        return resp;\n      });\n      setSite(results);\n    });\n    getCounties().then((response) => {\n      let results = response.map((resp) => {\n        return resp;\n      });\n      setCounty(results);\n    });\n    getBudgets().then((response) => {\n      let results = response.map((resp) => {\n        return resp;\n      });\n      setBudget(results);\n    });\n    getPrograms().then((response) => {\n      let results = response.map((resp) => {\n        return resp;\n      });\n      setProgram(results);\n    });\n  }, []);\n\n  return (\n    <>\n      {formSuccess && (\n        <ToastNotification\n          title=\"Data saved successfully\"\n          className={styles.toast}\n          timeout={3000}\n          subtitle=\"Employee tracking data saved successfully\"\n          kind=\"success\"\n        />\n      )}\n      {formError && (\n        <ToastNotification\n          title=\"Error saving data\"\n          className={styles.toast}\n          timeout={3000}\n          subtitle=\"Employee tracking data not saved\"\n          kind=\"error\"\n        />\n      )}\n      <Formik initialValues={FormValues} validationSchema={validationSchema} onSubmit={handleFormSubmit}>\n        {({ values, handleChange, handleBlur, setFieldValue, touched, errors }) => (\n          <Form className={styles.form}>\n            <Column>\n              <Select\n                id=\"project\"\n                name=\"project\"\n                labelText=\"Project\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                invalid={!!(touched.project && errors.project)}\n                invalidText={errors.project}\n              >\n                <SelectItem text=\"--Choose project--\" value=\"\" />\n                {project?.map((item, index) => (\n                  <SelectItem key={index} text={item.name} value={item.projectId} />\n                ))}\n              </Select>\n            </Column>\n            <Column>\n              <Select\n                id=\"department\"\n                name=\"department\"\n                labelText=\"Department\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                invalid={!!(touched.department && errors.department)}\n                invalidText={errors.department}\n              >\n                <SelectItem text=\"--Choose department--\" value=\"\" />\n                {department?.map((item, index) => (\n                  <SelectItem key={index} text={item.name} value={item.departmentId} />\n                ))}\n              </Select>\n            </Column>\n            <Column>\n              <Select\n                id=\"site\"\n                name=\"site\"\n                labelText=\"Site\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                invalid={!!(touched.site && errors.site)}\n                invalidText={errors.site}\n              >\n                <SelectItem text=\"--Choose site--\" value=\"\" />\n                {site?.map((item, index) => (\n                  <SelectItem key={index} text={item.name} value={item.siteId} />\n                ))}\n              </Select>\n            </Column>\n            <Column>\n              <Select\n                id=\"county\"\n                name=\"county\"\n                labelText=\"County\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                invalid={!!(touched.county && errors.county)}\n                invalidText={errors.county}\n              >\n                <SelectItem text=\"--Choose county--\" value=\"\" />\n                {county?.map((item, index) => (\n                  <SelectItem key={index} text={item.name} value={item.countyId} />\n                ))}\n              </Select>\n            </Column>\n            <Column>\n              <Select\n                id=\"countyBudget\"\n                name=\"countyBudget\"\n                labelText=\"County budget\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                invalid={!!(touched.countyBudget && errors.countyBudget)}\n                invalidText={errors.countyBudget}\n              >\n                <SelectItem text=\"--Choose county budget--\" value=\"\" />\n                {budget?.map((item, index) => (\n                  <SelectItem key={index} text={item.name} value={item.budgetId} />\n                ))}\n              </Select>\n            </Column>\n            <Column>\n              <Select\n                id=\"programArea\"\n                name=\"programArea\"\n                labelText=\"Program area\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                invalid={!!(touched.programArea && errors.programArea)}\n                invalidText={errors.programArea}\n              >\n                <SelectItem text=\"--Choose program area--\" value=\"\" />\n                {program?.map((item, index) => (\n                  <SelectItem key={index} text={item.name} value={item.programId} />\n                ))}\n              </Select>\n            </Column>\n            <Column>\n              <DatePicker\n                datePickerType=\"single\"\n                onChange={([event]) => setFieldValue('endOfContract', dayjs(event).format('YYYY-MM-DD'))}\n              >\n                <DatePickerInput\n                  id=\"endOfContract\"\n                  name=\"endOfContract\"\n                  labelText=\"End of contract\"\n                  placeholder=\"mm/dd/yyyy\"\n                  invalid={!!(touched.endOfContract && errors.endOfContract)}\n                  invalidText={errors.endOfContract}\n                />\n              </DatePicker>\n            </Column>\n            <Column>\n              <DatePicker\n                datePickerType=\"single\"\n                onChange={([event]) => setFieldValue('dateOfJoining', dayjs(event).format('YYYY-MM-DD'))}\n              >\n                <DatePickerInput\n                  id=\"dateOfJoining\"\n                  name=\"dateOfJoining\"\n                  labelText=\"Date of joining\"\n                  placeholder=\"mm/dd/yyyy\"\n                  invalid={!!(touched.dateOfJoining && errors.dateOfJoining)}\n                  invalidText={errors.dateOfJoining}\n                />\n              </DatePicker>\n            </Column>\n            <Column>\n              <DatePicker\n                datePickerType=\"single\"\n                onChange={([event]) => setFieldValue('dateOfLeaving', dayjs(event).format('YYYY-MM-DD'))}\n              >\n                <DatePickerInput\n                  id=\"dateOfLeaving\"\n                  name=\"dateOfLeaving\"\n                  labelText=\"Date of leaving\"\n                  placeholder=\"mm/dd/yyyy\"\n                  invalid={!!(touched.dateOfLeaving && errors.dateOfLeaving)}\n                  invalidText={errors.dateOfLeaving}\n                />\n              </DatePicker>\n            </Column>\n            <Column>\n              <TextInput\n                id=\"jobSpecification\"\n                name=\"jobSpecification\"\n                labelText=\"Job specification\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                invalid={!!(touched.jobSpecification && errors.jobSpecification)}\n                invalidText={errors.jobSpecification}\n                value={values.jobSpecification}\n              />\n            </Column>\n            <Column>\n              <Button type=\"submit\" className={styles.submitBtn} kind=\"primary\">\n                Save\n              </Button>\n            </Column>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}