{"ast":null,"code":"var _jsxFileName = \"/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Register/register.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable prettier/prettier */\nimport React, { useCallback, useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { Button, TextInput, Link, PasswordInput, ToastNotification } from 'carbon-components-react';\nimport { addUser } from './register.resource';\nimport styles from './register.module.scss';\nimport { formValues } from './register.types';\nimport { validationSchema } from './register.validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n\n  const [userCreated, setUserCreated] = useState(false);\n\n  const onFormSubmit = (values, helpers) => {\n    helpers.setSubmitting(true);\n    console.log('Values', values);\n    addUser(values).then(resp => {\n      if (resp.status === 200) {\n        console.log('response ok');\n        setUserCreated(true);\n      } else {\n        console.log('error');\n      }\n    });\n  };\n\n  const history = useHistory();\n  const handleOnClick = useCallback(() => history.push('/Login'), [history]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [userCreated && /*#__PURE__*/_jsxDEV(ToastNotification, {\n      title: \"Success!\",\n      timeout: 5000,\n      subtitle: \"User Created Successfully\",\n      kind: \"success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: validationSchema,\n      initialValues: formValues,\n      onSubmit: onFormSubmit,\n      children: ({\n        handleChange,\n        setFieldValue,\n        handleBlur,\n        values,\n        touched,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.registerform,\n        method: \"POST\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bx--grid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bx--row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: styles.h1,\n                children: \"Create New User \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n                className: styles.username,\n                id: \"userName\",\n                name: \"userName\",\n                \"data-testid\": \"username\",\n                invalid: !!(touched.userName && errors.userName),\n                invalidText: errors.userName,\n                labelText: \"User Name:\",\n                placeholder: \"Enter User Name\",\n                type: \"text\",\n                value: values.userName,\n                onChange: handleChange,\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n                className: styles.email,\n                name: \"email\",\n                id: \"email\",\n                labelText: \"Email:\",\n                placeholder: \"Enter valid email address\",\n                invalid: !!(touched.email && errors.email),\n                invalidText: errors.email,\n                value: values.email,\n                onChange: handleChange,\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n                id: \"password\",\n                name: \"password\",\n                className: styles.password,\n                hidePasswordLabel: \"Hide password\",\n                labelText: \"New Password: \",\n                placeholder: \"Enter Password\",\n                showPasswordLabel: \"Show password\",\n                invalid: !!(touched.password && errors.password),\n                invalidText: errors.password,\n                value: values.password,\n                onChange: handleChange,\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n                id: \"passwordConfirmation\",\n                name: \"passwordConfirmation\",\n                className: styles.password,\n                hidePasswordLabel: \"Hide password\",\n                labelText: \"Confirm New Password: \",\n                invalid: !!(touched.passwordConfirmation && errors.passwordConfirmation),\n                invalidText: errors.passwordConfirmation,\n                placeholder: \"Enter Password\",\n                showPasswordLabel: \"Show password\",\n                \"data-testid\": \"password\",\n                value: values.passwordConfirmation,\n                onChange: handleChange,\n                onBlur: handleBlur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"default\",\n                  kind: \"primary\",\n                  type: \"submit\",\n                  \"data-testid\": \"register\",\n                  className: styles.registerbutton,\n                  children: \"Create New User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  className: styles.link,\n                  onClick: handleOnClick,\n                  children: \"Back to Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"EtM0BHsUNoIhLHQ4BFLF/3iPQWA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Register/register.tsx"],"names":["React","useCallback","useState","Formik","Form","useHistory","Button","TextInput","Link","PasswordInput","ToastNotification","addUser","styles","formValues","validationSchema","Register","userCreated","setUserCreated","onFormSubmit","values","helpers","setSubmitting","console","log","then","resp","status","history","handleOnClick","push","handleChange","setFieldValue","handleBlur","touched","errors","registerform","h1","username","userName","email","password","passwordConfirmation","registerbutton","link"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\nimport React, { useCallback, useState } from 'react';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { Button, TextInput, Link, PasswordInput, ToastNotification } from 'carbon-components-react';\nimport { addUser } from './register.resource';\nimport styles from './register.module.scss';\nimport { formValues, formInputProps } from './register.types';\nimport { validationSchema } from './register.validation';\n\nexport const Register: React.FC = () => {\n  const [userCreated, setUserCreated] = useState<boolean>(false);\n\n  const onFormSubmit = (values: formInputProps, helpers: FormikHelpers<formInputProps>) => {\n    helpers.setSubmitting(true);\n    console.log('Values', values);\n    addUser(values).then((resp) => {\n      if (resp.status === 200) {\n        console.log('response ok');\n        setUserCreated(true);\n      } else {\n        console.log('error');\n      }\n    });\n  };\n\n  const history = useHistory();\n  const handleOnClick = useCallback(() => history.push('/Login'), [history]);\n\n  return (\n    <>\n      {userCreated && (\n        <ToastNotification title=\"Success!\" timeout={5000} subtitle=\"User Created Successfully\" kind=\"success\" />\n      )}\n      <Formik validationSchema={validationSchema} initialValues={formValues} onSubmit={onFormSubmit}>\n        {({ handleChange, setFieldValue, handleBlur, values, touched, errors }) => (\n          <Form className={styles.registerform} method=\"POST\">\n            <div className=\"bx--grid\">\n              <div className=\"bx--row\">\n                <div>\n                  <h1 className={styles.h1}>Create New User </h1>\n                  <TextInput\n                    className={styles.username}\n                    id=\"userName\"\n                    name=\"userName\"\n                    data-testid=\"username\"\n                    invalid={!!(touched.userName && errors.userName)}\n                    invalidText={errors.userName}\n                    labelText=\"User Name:\"\n                    placeholder=\"Enter User Name\"\n                    type=\"text\"\n                    value={values.userName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <TextInput\n                    className={styles.email}\n                    name=\"email\"\n                    id=\"email\"\n                    labelText=\"Email:\"\n                    placeholder=\"Enter valid email address\"\n                    invalid={!!(touched.email && errors.email)}\n                    invalidText={errors.email}\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <PasswordInput\n                    id=\"password\"\n                    name=\"password\"\n                    className={styles.password}\n                    hidePasswordLabel=\"Hide password\"\n                    labelText=\"New Password: \"\n                    placeholder=\"Enter Password\"\n                    showPasswordLabel=\"Show password\"\n                    invalid={!!(touched.password && errors.password)}\n                    invalidText={errors.password}\n                    value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <PasswordInput\n                    id=\"passwordConfirmation\"\n                    name=\"passwordConfirmation\"\n                    className={styles.password}\n                    hidePasswordLabel=\"Hide password\"\n                    labelText=\"Confirm New Password: \"\n                    invalid={!!(touched.passwordConfirmation && errors.passwordConfirmation)}\n                    invalidText={errors.passwordConfirmation}\n                    placeholder=\"Enter Password\"\n                    showPasswordLabel=\"Show password\"\n                    data-testid=\"password\"\n                    value={values.passwordConfirmation}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <div>\n                    <Button\n                      size=\"default\"\n                      kind=\"primary\"\n                      type=\"submit\"\n                      data-testid=\"register\"\n                      className={styles.registerbutton}\n                    >\n                      Create New User\n                    </Button>\n                    <Link className={styles.link} onClick={handleOnClick}>\n                      Back to Login\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}