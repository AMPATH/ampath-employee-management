{"ast":null,"code":"var _excluded = [\"className\", \"type\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction CodeSnippetSkeleton(_ref) {\n  var _cx;\n\n  var containerClassName = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'single' : _ref$type,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(containerClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--snippet\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--single\"), type === 'single'), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--multi\"), type === 'multi'), _cx));\n\n  if (type === 'single') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--snippet-container\")\n    }, /*#__PURE__*/React.createElement(\"span\", null)));\n  }\n\n  if (type === 'multi') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--snippet-container\")\n    }, /*#__PURE__*/React.createElement(\"span\", null), /*#__PURE__*/React.createElement(\"span\", null), /*#__PURE__*/React.createElement(\"span\", null)));\n  }\n}\n\nCodeSnippetSkeleton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * The type of the code snippet, including single or multi\n   */\n  type: PropTypes.oneOf(['single', 'multi'])\n};\nexport default CodeSnippetSkeleton;","map":{"version":3,"sources":["/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/node_modules/carbon-components-react/es/components/CodeSnippet/CodeSnippet.Skeleton.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","cx","PropTypes","React","usePrefix","CodeSnippetSkeleton","_ref","_cx","containerClassName","className","_ref$type","type","rest","prefix","concat","createElement","propTypes","string","oneOf"],"mappings":"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","sourcesContent":["var _excluded = [\"className\", \"type\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction CodeSnippetSkeleton(_ref) {\n  var _cx;\n\n  var containerClassName = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'single' : _ref$type,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(containerClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--snippet\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--single\"), type === 'single'), _defineProperty(_cx, \"\".concat(prefix, \"--snippet--multi\"), type === 'multi'), _cx));\n\n  if (type === 'single') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--snippet-container\")\n    }, /*#__PURE__*/React.createElement(\"span\", null)));\n  }\n\n  if (type === 'multi') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: className\n    }, rest), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--snippet-container\")\n    }, /*#__PURE__*/React.createElement(\"span\", null), /*#__PURE__*/React.createElement(\"span\", null), /*#__PURE__*/React.createElement(\"span\", null)));\n  }\n}\n\nCodeSnippetSkeleton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * The type of the code snippet, including single or multi\n   */\n  type: PropTypes.oneOf(['single', 'multi'])\n};\nexport default CodeSnippetSkeleton;"]},"metadata":{},"sourceType":"module"}