{"ast":null,"code":"var _jsxFileName = \"/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Reports/reports.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { Button, Column, DataTable, FormLabel, Grid, Pagination, Row, Select, SelectItem, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow } from 'carbon-components-react';\nimport { getBudgets, getCounties, getDepartments, getPrograms, getProjects, getReport, getSites, trackEmployees } from './reports.resource';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Report = () => {\n  _s();\n\n  const [firstRowIndex, setFirstRowIndex] = React.useState(0);\n  const [currentPageSize, setCurrentPageSize] = React.useState(10);\n  const [counties, setCounties] = React.useState([]);\n  const [departments, setDepartments] = React.useState([]);\n  const [projects, setProjects] = React.useState([]);\n  const [budgets, setBudgets] = React.useState([]);\n  const [sites, setSites] = React.useState([]);\n  const [programs, setPrograms] = React.useState([]);\n  const [report, setReport] = React.useState([]);\n  const [show, setShow] = React.useState(false);\n  const [selectedValues, setSelectedValues] = React.useState({\n    department: '',\n    project: '',\n    site: '',\n    budget: '',\n    county: '',\n    contractStatus: '',\n    programArea: ''\n  });\n\n  const handleChange = e => {\n    setSelectedValues(current => ({ ...current,\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  const tableHeaders = useMemo(() => [// { key: 'id', header: 'ID' },\n  {\n    key: 'pfNumber',\n    header: 'PF Number'\n  }, {\n    key: 'name',\n    header: 'Name'\n  }, {\n    key: 'status',\n    header: 'Status'\n  }, {\n    key: 'department',\n    header: 'Department'\n  }, {\n    key: 'project',\n    header: 'Project'\n  }, {\n    key: 'site',\n    header: 'Site'\n  }, {\n    key: 'county',\n    header: 'County'\n  }, {\n    key: 'program',\n    header: 'Program Area'\n  }], []);\n  useMemo(() => {\n    getCounties().then(res => {\n      const results = res.map(county => {\n        return { ...county,\n          counties: county.name\n        };\n      });\n      setCounties(results);\n    });\n    getDepartments().then(res => {\n      const results = res.map(department => {\n        return { ...department,\n          departments: department.name\n        };\n      });\n      setDepartments(results);\n    });\n    getProjects().then(res => {\n      const results = res.map(project => {\n        return { ...project,\n          projects: project.name\n        };\n      });\n      setProjects(results);\n    });\n    getBudgets().then(res => {\n      const results = res.map(budget => {\n        return { ...budget,\n          budgets: budget.name\n        };\n      });\n      setBudgets(results);\n    });\n    getSites().then(res => {\n      const results = res.map(site => {\n        return { ...site,\n          sites: site.name\n        };\n      });\n      setSites(results);\n    });\n    trackEmployees().then(res => {\n      const results = res.map(report => {\n        return {\n          id: report.pfNumber,\n          pfNumber: report.pfNumber,\n          name: `${report.firstName} ${report.middleName} ${report.lastName}`,\n          status: report.employeeStatus,\n          department: report.department,\n          project: report.project,\n          site: report.site,\n          county: report.county,\n          program: report.programArea\n        };\n      });\n      setReport(results);\n    });\n    getPrograms().then(res => {\n      const results = res.map(program => {\n        return { ...program,\n          programs: program.name\n        };\n      });\n      setPrograms(results);\n    });\n  }, []);\n\n  const handleReport = () => {\n    getReport(selectedValues).then(res => {\n      const results = res.map(report => {\n        return {\n          id: report.pfNumber,\n          pfNumber: report.pfNumber,\n          name: `${report.firstName} ${report.middleName} ${report.lastName}`,\n          status: report.employeeStatus,\n          department: report.department,\n          project: report.project,\n          site: report.site,\n          county: report.county,\n          program: report.programArea\n        };\n      });\n      setReport(results);\n    });\n  };\n\n  const getRowItems = rows => {\n    return rows.slice(firstRowIndex, firstRowIndex + currentPageSize).map(row => ({ ...row\n    }));\n  };\n\n  const rows = getRowItems(report);\n  React.useEffect(() => {\n    if (rows.length) {\n      setShow(true);\n    }\n  }, [rows.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        marginTop: '7rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          sm: 6,\n          md: 6,\n          lg: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Filter By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"contractStatus\",\n            labelText: \"Contract Status: \",\n            defaultValue: \"placeholder-item\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              disabled: true,\n              hidden: true,\n              value: \"placeholder-item\",\n              text: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: \"Active\",\n              value: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: \"InActive\",\n              value: \"InActive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"department\",\n            labelText: \"Department: \",\n            defaultValue: \"placeholder-item\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              disabled: true,\n              hidden: true,\n              value: \"placeholder-item\",\n              text: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), departments.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"project\",\n            labelText: \"Project: \",\n            defaultValue: \"placeholder-item\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              disabled: true,\n              hidden: true,\n              value: \"placeholder-item\",\n              text: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), projects.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"site\",\n            labelText: \"Site: \",\n            defaultValue: \"placeholder-item\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              disabled: true,\n              hidden: true,\n              value: \"placeholder-item\",\n              text: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), sites.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"budget\",\n            labelText: \"Budget: \",\n            defaultValue: \"placeholder-item\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              disabled: true,\n              hidden: true,\n              value: \"placeholder-item\",\n              text: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), budgets.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"county\",\n            labelText: \"County: \",\n            defaultValue: \"placeholder-item\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              disabled: true,\n              hidden: true,\n              value: \"placeholder-item\",\n              text: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), counties.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"programArea\",\n            labelText: \"Program Area: \",\n            defaultValue: \"placeholder-item\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n              disabled: true,\n              hidden: true,\n              value: \"placeholder-item\",\n              text: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), programs.map((item, index) => /*#__PURE__*/_jsxDEV(SelectItem, {\n              text: item.name,\n              value: item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              width: '100%'\n            },\n            kind: \"secondary\",\n            onClick: handleReport,\n            children: \"Generate report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          sm: 6,\n          md: 6,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            rows: rows,\n            headers: tableHeaders,\n            isSortable: true,\n            useZebraStyles: true,\n            children: ({\n              rows,\n              headers,\n              getHeaderProps,\n              getRowProps,\n              getTableProps\n            }) => /*#__PURE__*/_jsxDEV(TableContainer, {\n              title: \"Employees Report\",\n              style: {\n                marginTop: '3rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: headers.map(header => /*#__PURE__*/_jsxDEV(TableHeader, { ...getHeaderProps({\n                        header\n                      }),\n                      children: header.header\n                    }, header.key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: rows.length > 0 ? rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: cell.value\n                    }, cell.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 31\n                    }, this))\n                  }, row.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 27\n                  }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      style: {\n                        columnSpan: 'all'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: \"No records found\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n                totalItems: report.length,\n                backwardText: \"Previous page\",\n                forwardText: \"Next page\",\n                itemsPerPageText: \"Items per page:\",\n                pageNumberText: \"Page Number\",\n                pageSize: currentPageSize,\n                pageSizes: [5, 10, 15, 20, 25],\n                onChange: ({\n                  page,\n                  pageSize\n                }) => {\n                  if (pageSize !== currentPageSize) {\n                    setCurrentPageSize(pageSize);\n                  }\n\n                  setFirstRowIndex(pageSize * (page - 1));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Report, \"E82w6HtQcTfk575tiwW9P9RljAU=\");\n\n_c = Report;\n\nvar _c;\n\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"sources":["/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Reports/reports.tsx"],"names":["React","useMemo","Button","Column","DataTable","FormLabel","Grid","Pagination","Row","Select","SelectItem","Table","TableBody","TableCell","TableContainer","TableHead","TableHeader","TableRow","getBudgets","getCounties","getDepartments","getPrograms","getProjects","getReport","getSites","trackEmployees","Report","firstRowIndex","setFirstRowIndex","useState","currentPageSize","setCurrentPageSize","counties","setCounties","departments","setDepartments","projects","setProjects","budgets","setBudgets","sites","setSites","programs","setPrograms","report","setReport","show","setShow","selectedValues","setSelectedValues","department","project","site","budget","county","contractStatus","programArea","handleChange","e","current","target","id","value","tableHeaders","key","header","then","res","results","map","name","pfNumber","firstName","middleName","lastName","status","employeeStatus","program","handleReport","getRowItems","rows","slice","row","useEffect","length","marginTop","item","index","width","headers","getHeaderProps","getRowProps","getTableProps","cells","cell","columnSpan","page","pageSize"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport {\n  Button,\n  Column,\n  DataTable,\n  DataTableHeader,\n  DataTableRow,\n  DataTableSkeleton,\n  FormLabel,\n  Grid,\n  Pagination,\n  Row,\n  Select,\n  SelectItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from 'carbon-components-react';\nimport {\n  getBudgets,\n  getCounties,\n  getDepartments,\n  getPrograms,\n  getProjects,\n  getReport,\n  getSites,\n  trackEmployees,\n} from './reports.resource';\n\nexport const Report: React.FC = () => {\n  const [firstRowIndex, setFirstRowIndex] = React.useState(0);\n  const [currentPageSize, setCurrentPageSize] = React.useState(10);\n  const [counties, setCounties] = React.useState([]);\n  const [departments, setDepartments] = React.useState([]);\n  const [projects, setProjects] = React.useState([]);\n  const [budgets, setBudgets] = React.useState([]);\n  const [sites, setSites] = React.useState([]);\n  const [programs, setPrograms] = React.useState([]);\n  const [report, setReport] = React.useState([]);\n  const [show, setShow] = React.useState(false);\n  const [selectedValues, setSelectedValues] = React.useState({\n    department: '',\n    project: '',\n    site: '',\n    budget: '',\n    county: '',\n    contractStatus: '',\n    programArea: '',\n  });\n\n  const handleChange = (e: any) => {\n    setSelectedValues((current) => ({\n      ...current,\n      [e.target.id]: e.target.value,\n    }));\n  };\n\n  const tableHeaders: Array<DataTableHeader> = useMemo(\n    () => [\n      // { key: 'id', header: 'ID' },\n      { key: 'pfNumber', header: 'PF Number' },\n      { key: 'name', header: 'Name' },\n      { key: 'status', header: 'Status' },\n      { key: 'department', header: 'Department' },\n      { key: 'project', header: 'Project' },\n      { key: 'site', header: 'Site' },\n      { key: 'county', header: 'County' },\n      { key: 'program', header: 'Program Area' },\n    ],\n    [],\n  );\n\n  useMemo(() => {\n    getCounties().then((res) => {\n      const results = res.map((county: any) => {\n        return {\n          ...county,\n          counties: county.name,\n        };\n      });\n      setCounties(results);\n    });\n    getDepartments().then((res) => {\n      const results = res.map((department: any) => {\n        return {\n          ...department,\n          departments: department.name,\n        };\n      });\n      setDepartments(results);\n    });\n    getProjects().then((res) => {\n      const results = res.map((project: any) => {\n        return {\n          ...project,\n          projects: project.name,\n        };\n      });\n      setProjects(results);\n    });\n    getBudgets().then((res) => {\n      const results = res.map((budget: any) => {\n        return {\n          ...budget,\n          budgets: budget.name,\n        };\n      });\n      setBudgets(results);\n    });\n    getSites().then((res) => {\n      const results = res.map((site: any) => {\n        return {\n          ...site,\n          sites: site.name,\n        };\n      });\n      setSites(results);\n    });\n    trackEmployees().then((res) => {\n      const results = res.map((report: any) => {\n        return {\n          id: report.pfNumber,\n          pfNumber: report.pfNumber,\n          name: `${report.firstName} ${report.middleName} ${report.lastName}`,\n          status: report.employeeStatus,\n          department: report.department,\n          project: report.project,\n          site: report.site,\n          county: report.county,\n          program: report.programArea,\n        };\n      });\n      setReport(results);\n    });\n    getPrograms().then((res) => {\n      const results = res.map((program: any) => {\n        return {\n          ...program,\n          programs: program.name,\n        };\n      });\n      setPrograms(results);\n    });\n  }, []);\n\n  const handleReport = () => {\n    getReport(selectedValues).then((res) => {\n      const results = res.map((report: any) => {\n        return {\n          id: report.pfNumber,\n          pfNumber: report.pfNumber,\n          name: `${report.firstName} ${report.middleName} ${report.lastName}`,\n          status: report.employeeStatus,\n          department: report.department,\n          project: report.project,\n          site: report.site,\n          county: report.county,\n          program: report.programArea,\n        };\n      });\n      setReport(results);\n    });\n  };\n  const getRowItems = (rows: Array<DataTableRow>) => {\n    return rows.slice(firstRowIndex, firstRowIndex + currentPageSize).map((row: any) => ({ ...row }));\n  };\n\n  const rows = getRowItems(report);\n  React.useEffect(() => {\n    if (rows.length) {\n      setShow(true);\n    }\n  }, [rows.length]);\n  return (\n    <>\n      <Grid style={{ marginTop: '7rem' }}>\n        <Row>\n          <Column sm={6} md={6} lg={3}>\n            <FormLabel>\n              <span>Filter By</span>\n            </FormLabel>\n            <Select\n              id=\"contractStatus\"\n              labelText=\"Contract Status: \"\n              defaultValue=\"placeholder-item\"\n              onChange={handleChange}\n            >\n              <SelectItem disabled hidden value=\"placeholder-item\" text=\" \" />\n              <SelectItem text=\"Active\" value=\"Active\" />\n              <SelectItem text=\"InActive\" value=\"InActive\" />\n            </Select>\n\n            <Select id=\"department\" labelText=\"Department: \" defaultValue=\"placeholder-item\" onChange={handleChange}>\n              <SelectItem disabled hidden value=\"placeholder-item\" text=\" \" />\n              {departments.map((item: any, index: any) => (\n                <SelectItem text={item.name} key={index} value={item.name} />\n              ))}\n            </Select>\n\n            <Select id=\"project\" labelText=\"Project: \" defaultValue=\"placeholder-item\" onChange={handleChange}>\n              <SelectItem disabled hidden value=\"placeholder-item\" text=\" \" />\n              {projects.map((item: any, index: any) => (\n                <SelectItem text={item.name} key={index} value={item.name} />\n              ))}\n            </Select>\n\n            <Select id=\"site\" labelText=\"Site: \" defaultValue=\"placeholder-item\" onChange={handleChange}>\n              <SelectItem disabled hidden value=\"placeholder-item\" text=\" \" />\n              {sites.map((item: any, index: any) => (\n                <SelectItem text={item.name} key={index} value={item.name} />\n              ))}\n            </Select>\n\n            <Select id=\"budget\" labelText=\"Budget: \" defaultValue=\"placeholder-item\" onChange={handleChange}>\n              <SelectItem disabled hidden value=\"placeholder-item\" text=\" \" />\n              {budgets.map((item: any, index: any) => (\n                <SelectItem text={item.name} key={index} value={item.name} />\n              ))}\n            </Select>\n\n            <Select id=\"county\" labelText=\"County: \" defaultValue=\"placeholder-item\" onChange={handleChange}>\n              <SelectItem disabled hidden value=\"placeholder-item\" text=\" \" />\n              {counties.map((item: any, index: any) => (\n                <SelectItem text={item.name} key={index} value={item.name} />\n              ))}\n            </Select>\n\n            <Select id=\"programArea\" labelText=\"Program Area: \" defaultValue=\"placeholder-item\" onChange={handleChange}>\n              <SelectItem disabled hidden value=\"placeholder-item\" text=\" \" />\n              {programs.map((item: any, index: any) => (\n                <SelectItem text={item.name} key={index} value={item.name} />\n              ))}\n            </Select>\n            <br />\n            <Button style={{ width: '100%' }} kind=\"secondary\" onClick={handleReport}>\n              Generate report\n            </Button>\n          </Column>\n          <Column sm={6} md={6} lg={9}>\n            <DataTable rows={rows} headers={tableHeaders} isSortable useZebraStyles>\n              {({\n                rows,\n                headers,\n                getHeaderProps,\n                getRowProps,\n                getTableProps,\n              }: {\n                rows: any;\n                headers: any;\n                getRowProps: any;\n                getHeaderProps: any;\n                getTableProps: any;\n              }) => (\n                <TableContainer title=\"Employees Report\" style={{ marginTop: '3rem' }}>\n                  <Table {...getTableProps()}>\n                    <TableHead>\n                      <TableRow>\n                        {headers.map((header: any) => (\n                          <TableHeader key={header.key} {...getHeaderProps({ header })}>\n                            {header.header}\n                          </TableHeader>\n                        ))}\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {rows.length > 0 ? (\n                        rows.map((row: any) => (\n                          <TableRow key={row.id}>\n                            {row.cells.map((cell: any) => (\n                              <TableCell key={cell.id}>{cell.value}</TableCell>\n                            ))}\n                          </TableRow>\n                        ))\n                      ) : (\n                        <TableRow>\n                          <TableCell style={{ columnSpan: 'all' }}>\n                            <h5>No records found</h5>\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                  <Pagination\n                    totalItems={report.length}\n                    backwardText=\"Previous page\"\n                    forwardText=\"Next page\"\n                    itemsPerPageText=\"Items per page:\"\n                    pageNumberText=\"Page Number\"\n                    pageSize={currentPageSize}\n                    pageSizes={[5, 10, 15, 20, 25]}\n                    onChange={({ page, pageSize }) => {\n                      if (pageSize !== currentPageSize) {\n                        setCurrentPageSize(pageSize);\n                      }\n                      setFirstRowIndex(pageSize * (page - 1));\n                    }}\n                  />\n                </TableContainer>\n              )}\n            </DataTable>\n          </Column>\n        </Row>\n      </Grid>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}