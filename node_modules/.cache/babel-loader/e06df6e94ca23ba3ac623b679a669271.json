{"ast":null,"code":"const BaseUrl = process.env.REACT_APP_URL;\nexport const getEmployeeProfile = async pf => {\n  return await fetch(BaseUrl + `/search?pfnumber=${pf}`).then(response => {\n    return response.json();\n  }).then(res => {\n    return res.data;\n  }).catch(error => {\n    return error;\n  });\n};\nexport const getTimesheet = async pf => {\n  return await fetch(BaseUrl + `/timesheet?pfnumber=${pf}`).then(response => {\n    return response.json();\n  }).then(res => {\n    return res.data;\n  }).catch(error => {\n    return error;\n  });\n};","map":{"version":3,"sources":["/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Employee/Profile/EmployeeProfileConnection.tsx"],"names":["BaseUrl","process","env","REACT_APP_URL","getEmployeeProfile","pf","fetch","then","response","json","res","data","catch","error","getTimesheet"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAA5B;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,EAAP,IAAc;AAC9C,SAAO,MAAMC,KAAK,CAACN,OAAO,GAAI,oBAAmBK,EAAG,EAAlC,CAAL,CACVE,IADU,CACJC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHU,EAIVF,IAJU,CAIJG,GAAD,IAAc;AAClB,WAAOA,GAAG,CAACC,IAAX;AACD,GANU,EAOVC,KAPU,CAOHC,KAAD,IAAgB;AACrB,WAAOA,KAAP;AACD,GATU,CAAb;AAUD,CAXM;AAaP,OAAO,MAAMC,YAAY,GAAG,MAAOT,EAAP,IAAc;AACxC,SAAO,MAAMC,KAAK,CAACN,OAAO,GAAI,uBAAsBK,EAAG,EAArC,CAAL,CACVE,IADU,CACJC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHU,EAIVF,IAJU,CAIJG,GAAD,IAAc;AAClB,WAAOA,GAAG,CAACC,IAAX;AACD,GANU,EAOVC,KAPU,CAOHC,KAAD,IAAgB;AACrB,WAAOA,KAAP;AACD,GATU,CAAb;AAUD,CAXM","sourcesContent":["const BaseUrl = process.env.REACT_APP_URL;\nexport const getEmployeeProfile = async (pf) => {\n  return await fetch(BaseUrl + `/search?pfnumber=${pf}`)\n    .then((response) => {\n      return response.json();\n    })\n    .then((res: any) => {\n      return res.data;\n    })\n    .catch((error: any) => {\n      return error;\n    });\n};\n\nexport const getTimesheet = async (pf) => {\n  return await fetch(BaseUrl + `/timesheet?pfnumber=${pf}`)\n    .then((response) => {\n      return response.json();\n    })\n    .then((res: any) => {\n      return res.data;\n    })\n    .catch((error: any) => {\n      return error;\n    });\n};\n\nexport type Employee = {\n  name: string;\n  pfNumber: number;\n  age: number;\n  gender: string;\n  email: string;\n  telephone: string;\n};\n"]},"metadata":{},"sourceType":"module"}