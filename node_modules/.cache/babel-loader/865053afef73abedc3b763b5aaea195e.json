{"ast":null,"code":"var _jsxFileName = \"/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Login/login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { TextInput, Button, Form, Checkbox, PasswordInput, InlineNotification } from 'carbon-components-react';\nimport styles from './login.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = () => {\n    if (username === 'username' && password === 'password') {\n      history.push('/dashboard');\n    } else {\n      console.log('Login failed');\n      setError('Wrong username or password');\n    }\n  };\n\n  const history = useHistory();\n  const handleRegister = useCallback(() => history.push('/register/user'), [history]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: styles.loginform,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bx--grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bx--row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styles.h1,\n            children: \"Welcome to HR System \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            id: \"username\",\n            \"data-testid\": \"username\",\n            invalidText: \"A valid username is required\",\n            labelText: \"User Name:\",\n            required: true,\n            placeholder: \"Enter User Name\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n            id: \"password\",\n            hidePasswordLabel: \"Hide password\",\n            invalidText: \"A valid password is required\",\n            labelText: \"Password: \",\n            required: true,\n            placeholder: \"Enter Password\",\n            showPasswordLabel: \"Show password\",\n            \"data-testid\": \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              defaultChecked: true,\n              labelText: \"Remember me\",\n              id: \"checked\",\n              className: styles.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(InlineNotification, {\n                iconDescription: \"Error\",\n                kind: \"error\",\n                title: \"Login Error:Try Again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"field\",\n              kind: \"primary\",\n              type: \"submit\",\n              \"data-testid\": \"login\",\n              className: styles.logoutbutton,\n              onClick: handleLogin,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"field\",\n              kind: \"secondary\",\n              type: \"submit\",\n              className: styles.registerbutton,\n              onClick: handleRegister,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"hcnEbkbPeKyvd34WucPk4k6RPdY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Login/login.tsx"],"names":["React","useCallback","useState","useHistory","TextInput","Button","Form","Checkbox","PasswordInput","InlineNotification","styles","Login","username","setUsername","password","setPassword","error","setError","handleLogin","history","push","console","log","handleRegister","loginform","h1","e","target","value","checked","logoutbutton","registerbutton"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { TextInput, Button, Form, Checkbox, PasswordInput, InlineNotification } from 'carbon-components-react';\nimport styles from './login.module.scss';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = () => {\n    if (username === 'username' && password === 'password') {\n      history.push('/dashboard');\n    } else {\n      console.log('Login failed');\n      setError('Wrong username or password');\n    }\n  };\n\n  const history = useHistory();\n  const handleRegister = useCallback(() => history.push('/register/user'), [history]);\n\n  return (\n    <Form className={styles.loginform}>\n      <div className=\"bx--grid\">\n        <div className=\"bx--row\">\n          <div>\n            <h1 className={styles.h1}>Welcome to HR System </h1>\n            <TextInput\n              id=\"username\"\n              data-testid=\"username\"\n              invalidText=\"A valid username is required\"\n              labelText=\"User Name:\"\n              required\n              placeholder=\"Enter User Name\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <PasswordInput\n              id=\"password\"\n              hidePasswordLabel=\"Hide password\"\n              invalidText=\"A valid password is required\"\n              labelText=\"Password: \"\n              required\n              placeholder=\"Enter Password\"\n              showPasswordLabel=\"Show password\"\n              data-testid=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <div>\n              <Checkbox defaultChecked labelText=\"Remember me\" id=\"checked\" className={styles.checked} />\n              {error && (\n                <div>\n                  <InlineNotification iconDescription=\"Error\" kind=\"error\" title=\"Login Error:Try Again\" />\n                </div>\n              )}\n              <Button\n                size=\"field\"\n                kind=\"primary\"\n                type=\"submit\"\n                data-testid=\"login\"\n                className={styles.logoutbutton}\n                onClick={handleLogin}\n              >\n                Login\n              </Button>\n              <Button\n                size=\"field\"\n                kind=\"secondary\"\n                type=\"submit\"\n                className={styles.registerbutton}\n                onClick={handleRegister}\n              >\n                Register\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}