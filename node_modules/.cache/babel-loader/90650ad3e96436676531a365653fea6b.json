{"ast":null,"code":"var _jsxFileName = \"/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Timesheets/timesheetUpload.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport { Form, TextInput, FileUploader, Button, Grid, Column, Row } from 'carbon-components-react';\nimport { getAllEmployees, uploadTimesheet } from '../Timesheets/timesheet.resource';\nimport FilterableMultiSelect from 'carbon-components-react/lib/components/MultiSelect/FilterableMultiSelect';\nimport styles from './timesheet.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TimesheetUpload = () => {\n  _s();\n\n  const [selectedFiles, setSelectedFiles] = useState();\n  const [employees, setEmployees] = useState([]);\n  const [selectEmployees, setSelectEmployees] = useState([]);\n  const [month, setMonth] = useState('');\n\n  const handleImageChange = e => {\n    setSelectedFiles(e.target.files[0]);\n  };\n\n  const pfNumber = selectEmployees.map(i => {\n    return i.pfNumber;\n  });\n\n  const upload = () => {\n    let data = new FormData();\n    data.append('pfNumber', JSON.stringify(pfNumber));\n    data.append('month', month);\n    data.append('upload', selectedFiles);\n    uploadTimesheet(data).then(res => {\n      console.log(res);\n    });\n  };\n\n  useMemo(() => {\n    getAllEmployees().then(res => {\n      const results = res.map(employee => {\n        return {\n          id: employee.id,\n          name: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n          pfNumber: employee.pfNumber\n        };\n      });\n      setEmployees(results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: upload,\n            encType: \"multipart/form-data\",\n            className: styles.form,\n            children: [/*#__PURE__*/_jsxDEV(FilterableMultiSelect, {\n              id: \"\",\n              items: employees,\n              itemToString: item => item ? `${item.pfNumber + ' - ' + item.name}` : '',\n              placeholder: \"Select Employee(s)\",\n              selectionFeedback: \"fixed\",\n              onChange: e => setSelectEmployees(e.selectedItems)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n              id: \"\",\n              labelText: \"Month\",\n              type: \"date\",\n              className: \"form-control\",\n              min: \"2018-03\",\n              onChange: e => setMonth(e.target.value),\n              value: month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n              buttonKind: \"secondary\",\n              accept: ['.jpg', '.png'],\n              buttonLabel: \"Add file\",\n              iconDescription: \"Clear file\",\n              filenameStatus: \"edit\",\n              multiple: false,\n              onChange: handleImageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: !selectedFiles,\n              kind: \"secondary\",\n              style: {\n                marginTop: '1rem'\n              },\n              children: \"Upload TimeSheet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TimesheetUpload, \"GHoUK1sye/MY4B7vyWzgJeufJnU=\");\n\n_c = TimesheetUpload;\nexport default TimesheetUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimesheetUpload\");","map":{"version":3,"sources":["/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/src/Components/Timesheets/timesheetUpload.tsx"],"names":["React","useMemo","useState","Form","TextInput","FileUploader","Button","Grid","Column","Row","getAllEmployees","uploadTimesheet","FilterableMultiSelect","styles","TimesheetUpload","selectedFiles","setSelectedFiles","employees","setEmployees","selectEmployees","setSelectEmployees","month","setMonth","handleImageChange","e","target","files","pfNumber","map","i","upload","data","FormData","append","JSON","stringify","then","res","console","log","results","employee","id","name","firstName","middleName","lastName","form","item","selectedItems","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { Form, TextInput, FileUploader, Button, Grid, Column, Row } from 'carbon-components-react';\nimport { getAllEmployees, uploadTimesheet } from '../Timesheets/timesheet.resource';\nimport FilterableMultiSelect from 'carbon-components-react/lib/components/MultiSelect/FilterableMultiSelect';\nimport styles from './timesheet.module.scss';\n\nconst TimesheetUpload: React.FC = () => {\n  const [selectedFiles, setSelectedFiles] = useState<any>();\n  const [employees, setEmployees] = useState<Array<any>>([]);\n  const [selectEmployees, setSelectEmployees] = useState([]);\n  const [month, setMonth] = useState('');\n\n  const handleImageChange = (e: any) => {\n    setSelectedFiles(e.target.files[0]);\n  };\n\n  const pfNumber = selectEmployees.map((i: any) => {\n    return i.pfNumber;\n  });\n\n  const upload = () => {\n    let data = new FormData();\n    data.append('pfNumber', JSON.stringify(pfNumber));\n    data.append('month', month);\n    data.append('upload', selectedFiles);\n\n    uploadTimesheet(data).then((res: any) => {\n      console.log(res);\n    });\n  };\n\n  useMemo(() => {\n    getAllEmployees().then((res: any[]) => {\n      const results = res.map((employee: any) => {\n        return {\n          id: employee.id,\n          name: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n          pfNumber: employee.pfNumber,\n        };\n      });\n      setEmployees(results);\n    });\n  }, []);\n\n  return (\n    <>\n      <Grid>\n        <Row>\n          <Column>\n            <Form onSubmit={upload} encType=\"multipart/form-data\" className={styles.form}>\n              <FilterableMultiSelect\n                id=\"\"\n                items={employees}\n                itemToString={(item: { pfNumber: string; name: string }) =>\n                  item ? `${item.pfNumber + ' - ' + item.name}` : ''\n                }\n                placeholder=\"Select Employee(s)\"\n                selectionFeedback=\"fixed\"\n                onChange={(e: any) => setSelectEmployees(e.selectedItems)}\n              />\n              <TextInput\n                id=\"\"\n                labelText=\"Month\"\n                type=\"date\"\n                className=\"form-control\"\n                min=\"2018-03\"\n                onChange={(e) => setMonth(e.target.value)}\n                value={month}\n              />\n              <FileUploader\n                buttonKind=\"secondary\"\n                accept={['.jpg', '.png']}\n                buttonLabel=\"Add file\"\n                iconDescription=\"Clear file\"\n                filenameStatus=\"edit\"\n                multiple={false}\n                onChange={handleImageChange}\n              />\n\n              <Button type=\"submit\" disabled={!selectedFiles} kind=\"secondary\" style={{ marginTop: '1rem' }}>\n                Upload TimeSheet\n              </Button>\n            </Form>\n          </Column>\n        </Row>\n      </Grid>\n    </>\n  );\n};\nexport default TimesheetUpload;\n"]},"metadata":{},"sourceType":"module"}