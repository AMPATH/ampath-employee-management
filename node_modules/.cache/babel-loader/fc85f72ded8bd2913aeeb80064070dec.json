{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _FeatureFlags = require(\"../FeatureFlags\");\n\nvar _usePrefix = require(\"../../internal/usePrefix\");\n\nvar _excluded = [\"as\", \"children\", \"className\", \"sm\", \"md\", \"lg\", \"xlg\", \"max\"];\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction Column(_ref) {\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      children = _ref.children,\n      containerClassName = _ref.className,\n      sm = _ref.sm,\n      md = _ref.md,\n      lg = _ref.lg,\n      xlg = _ref.xlg,\n      max = _ref.max,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = (0, _usePrefix.usePrefix)();\n  var hasCSSGrid = (0, _FeatureFlags.useFeatureFlag)('enable-css-grid');\n  var columnClassName = hasCSSGrid ? getClassNameForBreakpoints([sm, md, lg, xlg, max], prefix) : getClassNameForFlexGridBreakpoints([sm, md, lg, xlg, max], prefix);\n  var className = (0, _classnames.default)(containerClassName, columnClassName, _defineProperty({}, \"\".concat(prefix, \"--col\"), columnClassName.length === 0));\n  return /*#__PURE__*/_react.default.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children);\n}\n\nvar spanPropType = _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.number, _propTypes.default.shape({\n  span: _propTypes.default.number,\n  offset: _propTypes.default.number\n})]);\n\nColumn.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `Column`\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Specify a custom className to be applied to the `Column`\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Specify column span for the `lg` breakpoint (Default breakpoint up to 1312px)\n   * This breakpoint supports 16 columns by default.\n   *\n   * @see https://www.carbondesignsystem.com/guidelines/layout#breakpoints\n   */\n  lg: spanPropType,\n\n  /**\n   * Specify column span for the `max` breakpoint. This breakpoint supports 16\n   * columns by default.\n   *\n   * @see https://www.carbondesignsystem.com/guidelines/layout#breakpoints\n   */\n  max: spanPropType,\n\n  /**\n   * Specify column span for the `md` breakpoint (Default breakpoint up to 1056px)\n   * This breakpoint supports 8 columns by default.\n   *\n   * @see https://www.carbondesignsystem.com/guidelines/layout#breakpoints\n   */\n  md: spanPropType,\n\n  /**\n   * Specify column span for the `sm` breakpoint (Default breakpoint up to 672px)\n   * This breakpoint supports 4 columns by default.\n   *\n   * @see https://www.carbondesignsystem.com/guidelines/layout#breakpoints\n   */\n  sm: spanPropType,\n\n  /**\n   * Specify column span for the `xlg` breakpoint (Default breakpoint up to\n   * 1584px) This breakpoint supports 16 columns by default.\n   *\n   * @see https://www.carbondesignsystem.com/guidelines/layout#breakpoints\n   */\n  xlg: spanPropType\n};\nvar breakpointNames = ['sm', 'md', 'lg', 'xlg', 'max'];\n/**\n * @typedef {object} Breakpoint\n * @property {boolean|number} [span]\n * @property {number} [offset]\n */\n\n/**\n * Build the appropriate className for the given set of breakpoints.\n * @param {Array<boolean|number|Breakpoint>} breakpoints\n * @returns {string}\n */\n\nfunction getClassNameForBreakpoints(breakpoints, prefix) {\n  var classNames = [];\n\n  for (var i = 0; i < breakpoints.length; i++) {\n    var breakpoint = breakpoints[i];\n\n    if (breakpoint === undefined || breakpoint === null) {\n      continue;\n    }\n\n    var name = breakpointNames[i]; // If our breakpoint is a boolean, the user has specified that the column\n    // should be \"auto\" at this size\n\n    if (breakpoint === true) {\n      classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-span-auto\"));\n      continue;\n    } // If our breakpoint is a number, the user has specified the number of\n    // columns they'd like this column to span\n\n\n    if (typeof breakpoint === 'number') {\n      classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-span-\").concat(breakpoint));\n      continue;\n    }\n\n    var span = breakpoint.span,\n        offset = breakpoint.offset;\n\n    if (typeof offset === 'number' && offset > 0) {\n      classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-start-\").concat(offset + 1));\n    }\n\n    if (typeof span === 'number') {\n      if (typeof offset === 'number' && offset > 0) {\n        classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-end-\").concat(offset + span + 1));\n      } else {\n        classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-span-\").concat(span));\n      }\n    }\n\n    if (span === true) {\n      classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-span-auto\"));\n    }\n  }\n\n  return classNames.join(' ');\n}\n/**\n * Build the appropriate className for the given set of breakpoints.\n * @param {Array<boolean|number|Breakpoint>} breakpoints\n * @returns {string}\n */\n\n\nfunction getClassNameForFlexGridBreakpoints(breakpoints, prefix) {\n  var classNames = [];\n\n  for (var i = 0; i < breakpoints.length; i++) {\n    var breakpoint = breakpoints[i];\n\n    if (breakpoint === undefined || breakpoint === null) {\n      continue;\n    }\n\n    var name = breakpointNames[i]; // If our breakpoint is a boolean, the user has specified that the column\n    // should be \"auto\" at this size\n\n    if (breakpoint === true) {\n      classNames.push(\"\".concat(prefix, \"--col-\").concat(name));\n      continue;\n    } // If our breakpoint is a number, the user has specified the number of\n    // columns they'd like this column to span\n\n\n    if (typeof breakpoint === 'number') {\n      classNames.push(\"\".concat(prefix, \"--col-\").concat(name, \"-\").concat(breakpoint));\n      continue;\n    }\n\n    var span = breakpoint.span,\n        offset = breakpoint.offset;\n\n    if (typeof span === 'number') {\n      classNames.push(\"\".concat(prefix, \"--col-\").concat(name, \"-\").concat(span));\n    }\n\n    if (span === true) {\n      classNames.push(\"\".concat(prefix, \"--col-\").concat(name));\n    }\n\n    if (typeof offset === 'number') {\n      classNames.push(\"\".concat(prefix, \"--offset-\").concat(name, \"-\").concat(offset));\n    }\n  }\n\n  return classNames.join(' ');\n}\n\nvar _default = Column;\nexports.default = _default;","map":{"version":3,"sources":["/home/walter/Desktop/AmpathDemo/ampath-employee-management/front-end/node_modules/carbon-components-react/lib/components/Grid/Column.js"],"names":["Object","defineProperty","exports","value","default","_classnames","_interopRequireDefault","require","_propTypes","_react","_FeatureFlags","_usePrefix","_excluded","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","enumerable","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","Column","_ref","_ref$as","as","BaseComponent","children","containerClassName","className","sm","md","lg","xlg","max","rest","prefix","usePrefix","hasCSSGrid","useFeatureFlag","columnClassName","getClassNameForBreakpoints","getClassNameForFlexGridBreakpoints","concat","createElement","spanPropType","oneOfType","bool","number","shape","span","offset","propTypes","string","elementType","node","breakpointNames","breakpoints","classNames","breakpoint","undefined","name","push","join","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _FeatureFlags = require(\"../FeatureFlags\");\n\nvar _usePrefix = require(\"../../internal/usePrefix\");\n\nvar _excluded = [\"as\", \"children\", \"className\", \"sm\", \"md\", \"lg\", \"xlg\", \"max\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Column(_ref) {\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      children = _ref.children,\n      containerClassName = _ref.className,\n      sm = _ref.sm,\n      md = _ref.md,\n      lg = _ref.lg,\n      xlg = _ref.xlg,\n      max = _ref.max,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = (0, _usePrefix.usePrefix)();\n  var hasCSSGrid = (0, _FeatureFlags.useFeatureFlag)('enable-css-grid');\n  var columnClassName = hasCSSGrid ? getClassNameForBreakpoints([sm, md, lg, xlg, max], prefix) : getClassNameForFlexGridBreakpoints([sm, md, lg, xlg, max], prefix);\n  var className = (0, _classnames.default)(containerClassName, columnClassName, _defineProperty({}, \"\".concat(prefix, \"--col\"), columnClassName.length === 0));\n  return /*#__PURE__*/_react.default.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children);\n}\n\nvar spanPropType = _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.number, _propTypes.default.shape({\n  span: _propTypes.default.number,\n  offset: _propTypes.default.number\n})]);\n\nColumn.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `Column`\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Specify a custom className to be applied to the `Column`\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Specify column span for the `lg` breakpoint (Default breakpoint up to 1312px)\n   * This breakpoint supports 16 columns by default.\n   *\n   * @see https://www.carbondesignsystem.com/guidelines/layout#breakpoints\n   */\n  lg: spanPropType,\n\n  /**\n   * Specify column span for the `max` breakpoint. This breakpoint supports 16\n   * columns by default.\n   *\n   * @see https://www.carbondesignsystem.com/guidelines/layout#breakpoints\n   */\n  max: spanPropType,\n\n  /**\n   * Specify column span for the `md` breakpoint (Default breakpoint up to 1056px)\n   * This breakpoint supports 8 columns by default.\n   *\n   * @see https://www.carbondesignsystem.com/guidelines/layout#breakpoints\n   */\n  md: spanPropType,\n\n  /**\n   * Specify column span for the `sm` breakpoint (Default breakpoint up to 672px)\n   * This breakpoint supports 4 columns by default.\n   *\n   * @see https://www.carbondesignsystem.com/guidelines/layout#breakpoints\n   */\n  sm: spanPropType,\n\n  /**\n   * Specify column span for the `xlg` breakpoint (Default breakpoint up to\n   * 1584px) This breakpoint supports 16 columns by default.\n   *\n   * @see https://www.carbondesignsystem.com/guidelines/layout#breakpoints\n   */\n  xlg: spanPropType\n};\nvar breakpointNames = ['sm', 'md', 'lg', 'xlg', 'max'];\n/**\n * @typedef {object} Breakpoint\n * @property {boolean|number} [span]\n * @property {number} [offset]\n */\n\n/**\n * Build the appropriate className for the given set of breakpoints.\n * @param {Array<boolean|number|Breakpoint>} breakpoints\n * @returns {string}\n */\n\nfunction getClassNameForBreakpoints(breakpoints, prefix) {\n  var classNames = [];\n\n  for (var i = 0; i < breakpoints.length; i++) {\n    var breakpoint = breakpoints[i];\n\n    if (breakpoint === undefined || breakpoint === null) {\n      continue;\n    }\n\n    var name = breakpointNames[i]; // If our breakpoint is a boolean, the user has specified that the column\n    // should be \"auto\" at this size\n\n    if (breakpoint === true) {\n      classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-span-auto\"));\n      continue;\n    } // If our breakpoint is a number, the user has specified the number of\n    // columns they'd like this column to span\n\n\n    if (typeof breakpoint === 'number') {\n      classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-span-\").concat(breakpoint));\n      continue;\n    }\n\n    var span = breakpoint.span,\n        offset = breakpoint.offset;\n\n    if (typeof offset === 'number' && offset > 0) {\n      classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-start-\").concat(offset + 1));\n    }\n\n    if (typeof span === 'number') {\n      if (typeof offset === 'number' && offset > 0) {\n        classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-end-\").concat(offset + span + 1));\n      } else {\n        classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-span-\").concat(span));\n      }\n    }\n\n    if (span === true) {\n      classNames.push(\"\".concat(prefix, \"--\").concat(name, \":col-span-auto\"));\n    }\n  }\n\n  return classNames.join(' ');\n}\n/**\n * Build the appropriate className for the given set of breakpoints.\n * @param {Array<boolean|number|Breakpoint>} breakpoints\n * @returns {string}\n */\n\n\nfunction getClassNameForFlexGridBreakpoints(breakpoints, prefix) {\n  var classNames = [];\n\n  for (var i = 0; i < breakpoints.length; i++) {\n    var breakpoint = breakpoints[i];\n\n    if (breakpoint === undefined || breakpoint === null) {\n      continue;\n    }\n\n    var name = breakpointNames[i]; // If our breakpoint is a boolean, the user has specified that the column\n    // should be \"auto\" at this size\n\n    if (breakpoint === true) {\n      classNames.push(\"\".concat(prefix, \"--col-\").concat(name));\n      continue;\n    } // If our breakpoint is a number, the user has specified the number of\n    // columns they'd like this column to span\n\n\n    if (typeof breakpoint === 'number') {\n      classNames.push(\"\".concat(prefix, \"--col-\").concat(name, \"-\").concat(breakpoint));\n      continue;\n    }\n\n    var span = breakpoint.span,\n        offset = breakpoint.offset;\n\n    if (typeof span === 'number') {\n      classNames.push(\"\".concat(prefix, \"--col-\").concat(name, \"-\").concat(span));\n    }\n\n    if (span === true) {\n      classNames.push(\"\".concat(prefix, \"--col-\").concat(name));\n    }\n\n    if (typeof offset === 'number') {\n      classNames.push(\"\".concat(prefix, \"--offset-\").concat(name, \"-\").concat(offset));\n    }\n  }\n\n  return classNames.join(' ');\n}\n\nvar _default = Column;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}